DROP FUNCTION IF EXISTS mergejson(doc text, patch text);
CREATE FUNCTION mergejson(doc text, patch text) RETURNS text AS $$
if 'json' in SD:
    json = SD['json']
else:
    import json
    SD['json'] = json
from copy import deepcopy
def dict_merge(target, *args):
  # Merge multiple dicts
  if len(args) > 1:
    for obj in args:
      dict_merge(target, obj)
    return target
 
  # Recursively merge dicts and set non-dict values
  obj = args[0]
  if not isinstance(obj, dict):
    return obj
  for k, v in obj.iteritems():
    if k in target and isinstance(target[k], dict):
      dict_merge(target[k], v)
    else:
      target[k] = deepcopy(v)
  return target


_doc = json.loads(doc)
_patch = json.loads(patch)
_doc= dict_merge(_doc, _patch)
result = json.dumps(_doc)
return result
    # rest of function
$$ LANGUAGE plpythonu;